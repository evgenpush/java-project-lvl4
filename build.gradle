/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'checkstyle'
    id 'io.ebean' version '13.6.0'
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

compileJava {
    options.release = 17
}
dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    implementation 'io.javalin:javalin:4.6.0'
    implementation 'org.slf4j:slf4j-simple:1.7.36'
    // This dependency is used by the application.
    implementation 'com.heroku.sdk:heroku-maven-plugin:3.0.3'
    implementation 'com.h2database:h2:1.4.200'
    implementation 'io.ebean:ebean:12.11.5'
    implementation 'io.ebean:ebean-querybean:12.11.5'
    implementation 'io.ebean:ebean-annotation:7.3'
    implementation 'io.ebean:ebean-migration:12.11.2'
    implementation 'io.ebean:ebean-ddl-generator:12.11.5'

    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.5'
    implementation 'javax.activation:activation:1.1.1'
}

application {
    // Define the main class for the application.
    mainClass = 'hexlet.code.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task stage(dependsOn:['clean', 'installDist'])
installDist.mustRunAfter clean

task generateMigrations(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'hexlet.code.MigrationGenerator'
}